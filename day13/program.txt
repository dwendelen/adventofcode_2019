   0 00001 ADD         *380         *379         *385
   4 01008 EQL        *2399       462045         *381
   8 01005 JPT         *381           12
  11 00099 HLT
  12 00109 REL         2400
  14 01102 MUL            0            1         *383
  18 01101 ADD            0            0         *382
  22 20101 ADD            0         *382           %1
  26 21001 ADD         *383            0           %2
  30 21102 MUL           37            1           %0
  34 01105 JPT            1          578
  37 00004 OUT         *382
  39 00004 OUT         *383
  41 00204 OUT           %1
  43 01001 ADD         *382            1         *382
  47 01007 LES         *382           44         *381
  51 01005 JPT         *381           22
  54 01001 ADD         *383            1         *383
  58 01007 LES         *383           20         *381
  62 01005 JPT         *381           18
  65 01006 JPF         *385           69
  68 00099 HLT
  69 00104 OUT           -1
  71 00104 OUT            0
  73 00004 OUT         *386
  75 00003 INP         *384
  77 01007 LES         *384            0         *381
  81 01005 JPT         *381           94
  84 00107 LES            0         *384         *381
  88 01005 JPT         *381          108
  91 01105 JPT            1          161
  94 00107 LES            1         *392         *381
  98 01006 JPF         *381          161
 101 01102 MUL           -1            1         *384
 105 01106 JPF            0          119
 108 01007 LES         *392           42         *381
 112 01006 JPF         *381          161
 115 01101 ADD            0            1         *384
 119 21002 MUL         *392            1           %1
 123 21101 ADD            0           18           %2
 127 21102 MUL            1            0           %3
 131 21101 ADD          138            0           %0
 135 01105 JPT            1          549
 138 00001 ADD         *392         *384         *392
 142 21002 MUL         *392            1           %1
 146 21102 MUL            1           18           %2
 150 21102 MUL            3            1           %3
 154 21101 ADD            0          161           %0
 158 01106 JPF            0          549
 161 01101 ADD            0            0         *384
 165 20001 ADD         *388         *390           %1
 169 20101 ADD            0         *389           %2
 173 21102 MUL            1          180           %0
 177 01106 JPF            0          578
 180 01206 JPF           %1          213
 183 01208 EQL           %1            2         *381
 187 01006 JPF         *381          205
 190 20001 ADD         *388         *390           %1
 194 21002 MUL         *389            1           %2
 198 21102 MUL            1          205           %0
 202 01105 JPT            1          393
 205 01002 MUL         *390           -1         *390
 209 01102 MUL            1            1         *384
 213 20101 ADD            0         *388           %1
 217 20001 ADD         *389         *391           %2
 221 21102 MUL          228            1           %0
 225 01105 JPT            1          578
 228 01206 JPF           %1          261
 231 01208 EQL           %1            2         *381
 235 01006 JPF         *381          253
 238 21002 MUL         *388            1           %1
 242 20001 ADD         *389         *391           %2
 246 21102 MUL          253            1           %0
 250 01105 JPT            1          393
 253 01002 MUL         *391           -1         *391
 257 01101 ADD            1            0         *384
 261 01005 JPT         *384          161
 264 20001 ADD         *388         *390           %1
 268 20001 ADD         *389         *391           %2
 272 21101 ADD          279            0           %0
 276 01106 JPF            0          578
 279 01206 JPF           %1          316
 282 01208 EQL           %1            2         *381
 286 01006 JPF         *381          304
 289 20001 ADD         *388         *390           %1
 293 20001 ADD         *389         *391           %2
 297 21102 MUL          304            1           %0
 301 01106 JPF            0          393
 304 01002 MUL         *390           -1         *390
 308 01002 MUL         *391           -1         *391
 312 01102 MUL            1            1         *384
 316 01005 JPT         *384          161
 319 21002 MUL         *388            1           %1
 323 21002 MUL         *389            1           %2
 327 21101 ADD            0            0           %3
 331 21101 ADD            0          338           %0
 335 01105 JPT            1          549
 338 00001 ADD         *388         *390         *388
 342 00001 ADD         *389         *391         *389
 346 20101 ADD            0         *388           %1
 350 20101 ADD            0         *389           %2
 354 21102 MUL            1            4           %3
 358 21102 MUL            1          365           %0
 362 01106 JPF            0          549
 365 01007 LES         *389           19         *381
 369 01005 JPT         *381           75
 372 00104 OUT           -1
 374 00104 OUT            0
 376 00104 OUT            0
 378 00099 HLT
 379 00000
 380 00001
 381 00000
 382 00000
 383 00000
 384 00000
 385 00000
 386 00000
 387 00318
 388 00020
 389 00015
 390 00001
 391 00001
 392 00022
 393 00109 REL            3
 395 22101 ADD            0          %-2           %1
 399 21202 MUL          %-1            1           %2
 403 21102 MUL            1            0           %3
 407 21102 MUL            1          414           %0
 411 01106 JPF            0          549
 414 21201 ADD          %-2            0           %1
 418 22102 MUL            1          %-1           %2
 422 21101 ADD          429            0           %0
 426 01106 JPF            0          601
 429 02101 ADD            0           %1         *435
 433 00001 ADD         *386           *0         *386
 437 00104 OUT           -1
 439 00104 OUT            0
 441 00004 OUT         *386
 443 01001 ADD         *387           -1         *387
 447 01005 JPT         *387          451
 450 00099 HLT
 451 00109 REL           -3
 453 02105 JPT            1           %0
 456 00109 REL            8
 458 22202 MUL          %-7          %-6          %-3
 462 22201 ADD          %-3          %-5          %-3
 466 21202 MUL          %-4           64          %-2
 470 02207 LES          %-3          %-2         *381
 474 01005 JPT         *381          492
 477 21202 MUL          %-2           -1          %-1
 481 22201 ADD          %-3          %-1          %-3
 485 02207 LES          %-3          %-2         *381
 489 01006 JPF         *381          481
 492 21202 MUL          %-4            8          %-2
 496 02207 LES          %-3          %-2         *381
 500 01005 JPT         *381          518
 503 21202 MUL          %-2           -1          %-1
 507 22201 ADD          %-3          %-1          %-3
 511 02207 LES          %-3          %-2         *381
 515 01006 JPF         *381          507
 518 02207 LES          %-3          %-4         *381
 522 01005 JPT         *381          540
 525 21202 MUL          %-4           -1          %-1
 529 22201 ADD          %-3          %-1          %-3
 533 02207 LES          %-3          %-4         *381
 537 01006 JPF         *381          529
 540 22101 ADD            0          %-3          %-7
 544 00109 REL           -8
 546 02106 JPF            0           %0
 549 00109 REL            4
 551 01202 MUL          %-2           44         *566
 555 00201 ADD          %-3         *566         *566
 559 00101 ADD          639         *566         *566
 563 01201 ADD          %-1            0           *0
 567 00204 OUT          %-3
 569 00204 OUT          %-2
 571 00204 OUT          %-1
 573 00109 REL           -4
 575 02106 JPF            0           %0
 578 00109 REL            3
 580 01202 MUL          %-1           44         *593
 584 00201 ADD          %-2         *593         *593
 588 00101 ADD          639         *593         *593
 592 21002 MUL           *0            1          %-2
 596 00109 REL           -3
 598 02105 JPT            1           %0
 601 00109 REL            3
 603 22102 MUL           20          %-2           %1
 607 22201 ADD           %1          %-1           %1
 611 21102 MUL          443            1           %2
 615 21101 ADD          114            0           %3
 619 21102 MUL            1          880           %4
 623 21102 MUL            1          630           %0
 627 01106 JPF            0          456
 630 21201 ADD           %1         1519          %-2
 634 00109 REL           -3
 636 02105 JPT            1           %0
 639 00001
 640 00001
 641 00001
 642 00001
 643 00001
 644 00001
 645 00001
 646 00001
 647 00001
 648 00001
 649 00001
 650 00001
 651 00001
 652 00001
 653 00001
 654 00001
 655 00001
 656 00001
 657 00001
 658 00001
 659 00001
 660 00001
 661 00001
 662 00001
 663 00001
 664 00001
 665 00001
 666 00001
 667 00001
 668 00001
 669 00001
 670 00001
 671 00001
 672 00001
 673 00001
 674 00001
 675 00001
 676 00001
 677 00001
 678 00001
 679 00001
 680 00001
 681 00001
 682 00001
 683 00001
 684 00000
 685 00000
 686 00000
 687 00000
 688 00000
 689 00000
 690 00000
 691 00000
 692 00000
 693 00000
 694 00000
 695 00000
 696 00000
 697 00000
 698 00000
 699 00000
 700 00000
 701 00000
 702 00000
 703 00000
 704 00000
 705 00000
 706 00000
 707 00000
 708 00000
 709 00000
 710 00000
 711 00000
 712 00000
 713 00000
 714 00000
 715 00000
 716 00000
 717 00000
 718 00000
 719 00000
 720 00000
 721 00000
 722 00000
 723 00000
 724 00000
 725 00000
 726 00001
 727 00001
 728 00000
 729 00002
 730 00002
 731 00000
 732 00002
 733 00002
 734 00002
 735 00002
 736 00002
 737 00000
 738 00002
 739 00002
 740 00002
 741 00000
 742 00000
 743 00000
 744 00002
 745 00002
 746 00002
 747 00002
 748 00002
 749 00002
 750 00000
 751 00002
 752 00002
 753 00000
 754 00000
 755 00002
 756 00002
 757 00002
 758 00000
 759 00002
 760 00002
 761 00002
 762 00002
 763 00000
 764 00000
 765 00002
 766 00000
 767 00002
 768 00002
 769 00000
 770 00001
 771 00001
 772 00000
 773 00002
 774 00002
 775 00000
 776 00002
 777 00002
 778 00002
 779 00002
 780 00002
 781 00000
 782 00002
 783 00002
 784 00000
 785 00002
 786 00002
 787 00002
 788 00000
 789 00000
 790 00000
 791 00002
 792 00000
 793 00002
 794 00002
 795 00000
 796 00000
 797 00002
 798 00002
 799 00002
 800 00000
 801 00002
 802 00002
 803 00002
 804 00002
 805 00002
 806 00000
 807 00002
 808 00000
 809 00000
 810 00002
 811 00002
 812 00000
 813 00000
 814 00001
 815 00001
 816 00000
 817 00002
 818 00002
 819 00000
 820 00002
 821 00002
 822 00002
 823 00002
 824 00002
 825 00002
 826 00000
 827 00002
 828 00002
 829 00002
 830 00002
 831 00000
 832 00002
 833 00002
 834 00000
 835 00000
 836 00002
 837 00000
 838 00000
 839 00000
 840 00002
 841 00000
 842 00000
 843 00002
 844 00002
 845 00002
 846 00002
 847 00002
 848 00000
 849 00002
 850 00002
 851 00000
 852 00002
 853 00002
 854 00002
 855 00000
 856 00002
 857 00000
 858 00001
 859 00001
 860 00000
 861 00002
 862 00002
 863 00002
 864 00002
 865 00000
 866 00000
 867 00002
 868 00002
 869 00002
 870 00002
 871 00002
 872 00002
 873 00002
 874 00002
 875 00000
 876 00000
 877 00002
 878 00002
 879 00002
 880 00000
 881 00002
 882 00002
 883 00002
 884 00000
 885 00002
 886 00002
 887 00000
 888 00000
 889 00000
 890 00002
 891 00002
 892 00002
 893 00002
 894 00002
 895 00002
 896 00000
 897 00002
 898 00002
 899 00002
 900 00002
 901 00000
 902 00001
 903 00001
 904 00000
 905 00000
 906 00002
 907 00002
 908 00002
 909 00002
 910 00002
 911 00002
 912 00000
 913 00002
 914 00000
 915 00002
 916 00002
 917 00000
 918 00002
 919 00000
 920 00002
 921 00000
 922 00002
 923 00000
 924 00002
 925 00002
 926 00002
 927 00000
 928 00002
 929 00000
 930 00000
 931 00000
 932 00002
 933 00000
 934 00002
 935 00002
 936 00000
 937 00000
 938 00002
 939 00002
 940 00002
 941 00002
 942 00002
 943 00000
 944 00002
 945 00000
 946 00001
 947 00001
 948 00000
 949 00000
 950 00002
 951 00002
 952 00002
 953 00002
 954 00002
 955 00002
 956 00002
 957 00002
 958 00000
 959 00002
 960 00002
 961 00000
 962 00000
 963 00002
 964 00000
 965 00002
 966 00000
 967 00002
 968 00000
 969 00000
 970 00002
 971 00002
 972 00000
 973 00000
 974 00002
 975 00002
 976 00000
 977 00000
 978 00000
 979 00002
 980 00000
 981 00002
 982 00000
 983 00002
 984 00002
 985 00002
 986 00000
 987 00002
 988 00002
 989 00000
 990 00001
 991 00001
 992 00000
 993 00000
 994 00000
 995 00000
 996 00000
 997 00000
 998 00002
 999 00000
 1000 00002
 1001 00000
 1002 00000
 1003 00002
 1004 00002
 1005 00000
 1006 00002
 1007 00002
 1008 00000
 1009 00000
 1010 00002
 1011 00000
 1012 00000
 1013 00002
 1014 00002
 1015 00002
 1016 00002
 1017 00002
 1018 00002
 1019 00002
 1020 00002
 1021 00000
 1022 00002
 1023 00002
 1024 00000
 1025 00000
 1026 00000
 1027 00002
 1028 00002
 1029 00002
 1030 00002
 1031 00002
 1032 00002
 1033 00000
 1034 00001
 1035 00001
 1036 00000
 1037 00000
 1038 00002
 1039 00002
 1040 00002
 1041 00002
 1042 00000
 1043 00000
 1044 00000
 1045 00000
 1046 00002
 1047 00000
 1048 00000
 1049 00002
 1050 00002
 1051 00000
 1052 00002
 1053 00002
 1054 00002
 1055 00002
 1056 00002
 1057 00002
 1058 00000
 1059 00002
 1060 00002
 1061 00002
 1062 00000
 1063 00002
 1064 00002
 1065 00002
 1066 00000
 1067 00002
 1068 00002
 1069 00002
 1070 00002
 1071 00002
 1072 00002
 1073 00000
 1074 00002
 1075 00000
 1076 00002
 1077 00000
 1078 00001
 1079 00001
 1080 00000
 1081 00002
 1082 00000
 1083 00002
 1084 00002
 1085 00002
 1086 00002
 1087 00002
 1088 00000
 1089 00000
 1090 00002
 1091 00002
 1092 00002
 1093 00002
 1094 00002
 1095 00000
 1096 00002
 1097 00002
 1098 00002
 1099 00002
 1100 00002
 1101 00002
 1102 00000
 1103 00002
 1104 00000
 1105 00000
 1106 00000
 1107 00002
 1108 00002
 1109 00000
 1110 00002
 1111 00000
 1112 00000
 1113 00002
 1114 00000
 1115 00002
 1116 00002
 1117 00002
 1118 00002
 1119 00002
 1120 00002
 1121 00000
 1122 00001
 1123 00001
 1124 00000
 1125 00002
 1126 00002
 1127 00002
 1128 00002
 1129 00002
 1130 00000
 1131 00002
 1132 00002
 1133 00002
 1134 00002
 1135 00002
 1136 00002
 1137 00002
 1138 00000
 1139 00002
 1140 00002
 1141 00002
 1142 00002
 1143 00002
 1144 00000
 1145 00002
 1146 00002
 1147 00002
 1148 00002
 1149 00002
 1150 00002
 1151 00000
 1152 00002
 1153 00002
 1154 00002
 1155 00002
 1156 00002
 1157 00002
 1158 00000
 1159 00000
 1160 00000
 1161 00002
 1162 00002
 1163 00000
 1164 00002
 1165 00000
 1166 00001
 1167 00001
 1168 00000
 1169 00000
 1170 00000
 1171 00000
 1172 00002
 1173 00002
 1174 00002
 1175 00002
 1176 00002
 1177 00002
 1178 00002
 1179 00000
 1180 00002
 1181 00002
 1182 00002
 1183 00002
 1184 00002
 1185 00000
 1186 00002
 1187 00000
 1188 00002
 1189 00002
 1190 00000
 1191 00002
 1192 00002
 1193 00000
 1194 00002
 1195 00002
 1196 00002
 1197 00000
 1198 00002
 1199 00002
 1200 00000
 1201 00000
 1202 00002
 1203 00000
 1204 00002
 1205 00000
 1206 00002
 1207 00002
 1208 00000
 1209 00000
 1210 00001
 1211 00001
 1212 00000
 1213 00000
 1214 00002
 1215 00002
 1216 00002
 1217 00002
 1218 00000
 1219 00002
 1220 00000
 1221 00002
 1222 00002
 1223 00000
 1224 00002
 1225 00002
 1226 00002
 1227 00002
 1228 00002
 1229 00002
 1230 00000
 1231 00002
 1232 00000
 1233 00000
 1234 00000
 1235 00000
 1236 00002
 1237 00000
 1238 00002
 1239 00002
 1240 00002
 1241 00002
 1242 00002
 1243 00000
 1244 00000
 1245 00002
 1246 00000
 1247 00002
 1248 00000
 1249 00000
 1250 00000
 1251 00000
 1252 00000
 1253 00000
 1254 00001
 1255 00001
 1256 00000
 1257 00000
 1258 00000
 1259 00000
 1260 00000
 1261 00000
 1262 00000
 1263 00000
 1264 00000
 1265 00000
 1266 00000
 1267 00000
 1268 00000
 1269 00000
 1270 00000
 1271 00000
 1272 00000
 1273 00000
 1274 00000
 1275 00000
 1276 00000
 1277 00000
 1278 00000
 1279 00000
 1280 00000
 1281 00000
 1282 00000
 1283 00000
 1284 00000
 1285 00000
 1286 00000
 1287 00000
 1288 00000
 1289 00000
 1290 00000
 1291 00000
 1292 00000
 1293 00000
 1294 00000
 1295 00000
 1296 00000
 1297 00000
 1298 00001
 1299 00001
 1300 00000
 1301 00000
 1302 00000
 1303 00000
 1304 00000
 1305 00000
 1306 00000
 1307 00000
 1308 00000
 1309 00000
 1310 00000
 1311 00000
 1312 00000
 1313 00000
 1314 00000
 1315 00000
 1316 00000
 1317 00000
 1318 00000
 1319 00004
 1320 00000
 1321 00000
 1322 00000
 1323 00000
 1324 00000
 1325 00000
 1326 00000
 1327 00000
 1328 00000
 1329 00000
 1330 00000
 1331 00000
 1332 00000
 1333 00000
 1334 00000
 1335 00000
 1336 00000
 1337 00000
 1338 00000
 1339 00000
 1340 00000
 1341 00000
 1342 00001
 1343 00001
 1344 00000
 1345 00000
 1346 00000
 1347 00000
 1348 00000
 1349 00000
 1350 00000
 1351 00000
 1352 00000
 1353 00000
 1354 00000
 1355 00000
 1356 00000
 1357 00000
 1358 00000
 1359 00000
 1360 00000
 1361 00000
 1362 00000
 1363 00000
 1364 00000
 1365 00000
 1366 00000
 1367 00000
 1368 00000
 1369 00000
 1370 00000
 1371 00000
 1372 00000
 1373 00000
 1374 00000
 1375 00000
 1376 00000
 1377 00000
 1378 00000
 1379 00000
 1380 00000
 1381 00000
 1382 00000
 1383 00000
 1384 00000
 1385 00000
 1386 00001
 1387 00001
 1388 00000
 1389 00000
 1390 00000
 1391 00000
 1392 00000
 1393 00000
 1394 00000
 1395 00000
 1396 00000
 1397 00000
 1398 00000
 1399 00000
 1400 00000
 1401 00000
 1402 00000
 1403 00000
 1404 00000
 1405 00000
 1406 00000
 1407 00000
 1408 00000
 1409 00000
 1410 00000
 1411 00000
 1412 00000
 1413 00000
 1414 00000
 1415 00000
 1416 00000
 1417 00000
 1418 00000
 1419 00000
 1420 00000
 1421 00000
 1422 00000
 1423 00000
 1424 00000
 1425 00000
 1426 00000
 1427 00000
 1428 00000
 1429 00000
 1430 00001
 1431 00001
 1432 00000
 1433 00000
 1434 00000
 1435 00000
 1436 00000
 1437 00000
 1438 00000
 1439 00000
 1440 00000
 1441 00000
 1442 00000
 1443 00000
 1444 00000
 1445 00000
 1446 00000
 1447 00000
 1448 00000
 1449 00000
 1450 00000
 1451 00000
 1452 00000
 1453 00003
 1454 00000
 1455 00000
 1456 00000
 1457 00000
 1458 00000
 1459 00000
 1460 00000
 1461 00000
 1462 00000
 1463 00000
 1464 00000
 1465 00000
 1466 00000
 1467 00000
 1468 00000
 1469 00000
 1470 00000
 1471 00000
 1472 00000
 1473 00000
 1474 00001
 1475 00001
 1476 00000
 1477 00000
 1478 00000
 1479 00000
 1480 00000
 1481 00000
 1482 00000
 1483 00000
 1484 00000
 1485 00000
 1486 00000
 1487 00000
 1488 00000
 1489 00000
 1490 00000
 1491 00000
 1492 00000
 1493 00000
 1494 00000
 1495 00000
 1496 00000
 1497 00000
 1498 00000
 1499 00000
 1500 00000
 1501 00000
 1502 00000
 1503 00000
 1504 00000
 1505 00000
 1506 00000
 1507 00000
 1508 00000
 1509 00000
 1510 00000
 1511 00000
 1512 00000
 1513 00000
 1514 00000
 1515 00000
 1516 00000
 1517 00000
 1518 00001
 1519 00056
 1520 00072
 1521 00033
 1522 00024
 1523 00073
 1524 00085
 1525 00029
 1526 00045
 1527 00048
 1528 00012
 1529 00058
 1530 00096
 1531 00032
 1532 00017
 1533 00048
 1534 00017
 1535 00009
 1536 00049
 1537 00078
 1538 00006
 1539 00048
 1540 00098
 1541 00091
 1542 00023
 1543 00028
 1544 00037
 1545 00016
 1546 00054
 1547 00030
 1548 00088
 1549 00069
 1550 00069
 1551 00023
 1552 00059
 1553 00033
 1554 00061
 1555 00089
 1556 00094
 1557 00079
 1558 00064
 1559 00042
 1560 00013
 1561 00082
 1562 00045
 1563 00098
 1564 00057
 1565 00057
 1566 00080
 1567 00006
 1568 00002
 1569 00067
 1570 00086
 1571 00026
 1572 00084
 1573 00080
 1574 00047
 1575 00072
 1576 00038
 1577 00022
 1578 00073
 1579 00075
 1580 00004
 1581 00003
 1582 00047
 1583 00096
 1584 00034
 1585 00052
 1586 00022
 1587 00026
 1588 00090
 1589 00074
 1590 00084
 1591 00037
 1592 00068
 1593 00037
 1594 00073
 1595 00086
 1596 00059
 1597 00027
 1598 00067
 1599 00052
 1600 00022
 1601 00063
 1602 00092
 1603 00041
 1604 00046
 1605 00068
 1606 00093
 1607 00055
 1608 00003
 1609 00006
 1610 00078
 1611 00032
 1612 00082
 1613 00008
 1614 00034
 1615 00041
 1616 00077
 1617 00029
 1618 00092
 1619 00077
 1620 00081
 1621 00017
 1622 00090
 1623 00040
 1624 00050
 1625 00027
 1626 00080
 1627 00082
 1628 00096
 1629 00066
 1630 00021
 1631 00067
 1632 00096
 1633 00069
 1634 00012
 1635 00039
 1636 00065
 1637 00093
 1638 00007
 1639 00091
 1640 00097
 1641 00055
 1642 00095
 1643 00064
 1644 00009
 1645 00091
 1646 00048
 1647 00023
 1648 00044
 1649 00096
 1650 00067
 1651 00038
 1652 00043
 1653 00026
 1654 00070
 1655 00064
 1656 00017
 1657 00047
 1658 00098
 1659 00035
 1660 00054
 1661 00089
 1662 00031
 1663 00067
 1664 00018
 1665 00036
 1666 00042
 1667 00052
 1668 00019
 1669 00071
 1670 00004
 1671 00047
 1672 00021
 1673 00043
 1674 00077
 1675 00006
 1676 00064
 1677 00045
 1678 00094
 1679 00049
 1680 00052
 1681 00054
 1682 00085
 1683 00009
 1684 00078
 1685 00073
 1686 00044
 1687 00056
 1688 00003
 1689 00037
 1690 00015
 1691 00045
 1692 00016
 1693 00078
 1694 00098
 1695 00082
 1696 00027
 1697 00059
 1698 00013
 1699 00026
 1700 00075
 1701 00073
 1702 00018
 1703 00074
 1704 00020
 1705 00063
 1706 00065
 1707 00056
 1708 00055
 1709 00098
 1710 00034
 1711 00010
 1712 00097
 1713 00055
 1714 00070
 1715 00051
 1716 00025
 1717 00009
 1718 00016
 1719 00010
 1720 00079
 1721 00049
 1722 00058
 1723 00013
 1724 00092
 1725 00019
 1726 00025
 1727 00079
 1728 00033
 1729 00048
 1730 00005
 1731 00078
 1732 00086
 1733 00094
 1734 00048
 1735 00039
 1736 00003
 1737 00043
 1738 00090
 1739 00035
 1740 00045
 1741 00056
 1742 00060
 1743 00051
 1744 00092
 1745 00004
 1746 00052
 1747 00064
 1748 00063
 1749 00018
 1750 00070
 1751 00044
 1752 00082
 1753 00070
 1754 00029
 1755 00072
 1756 00053
 1757 00091
 1758 00036
 1759 00075
 1760 00095
 1761 00057
 1762 00061
 1763 00042
 1764 00079
 1765 00098
 1766 00026
 1767 00008
 1768 00073
 1769 00010
 1770 00003
 1771 00069
 1772 00095
 1773 00069
 1774 00039
 1775 00013
 1776 00070
 1777 00090
 1778 00066
 1779 00096
 1780 00097
 1781 00021
 1782 00035
 1783 00038
 1784 00043
 1785 00021
 1786 00079
 1787 00091
 1788 00005
 1789 00092
 1790 00093
 1791 00048
 1792 00025
 1793 00031
 1794 00015
 1795 00039
 1796 00058
 1797 00051
 1798 00068
 1799 00046
 1800 00093
 1801 00010
 1802 00056
 1803 00016
 1804 00005
 1805 00054
 1806 00034
 1807 00054
 1808 00068
 1809 00022
 1810 00097
 1811 00018
 1812 00014
 1813 00096
 1814 00052
 1815 00092
 1816 00062
 1817 00062
 1818 00062
 1819 00043
 1820 00062
 1821 00073
 1822 00041
 1823 00085
 1824 00036
 1825 00081
 1826 00081
 1827 00001
 1828 00041
 1829 00092
 1830 00094
 1831 00078
 1832 00032
 1833 00072
 1834 00015
 1835 00030
 1836 00054
 1837 00086
 1838 00001
 1839 00060
 1840 00028
 1841 00020
 1842 00094
 1843 00015
 1844 00052
 1845 00060
 1846 00068
 1847 00063
 1848 00015
 1849 00045
 1850 00039
 1851 00066
 1852 00065
 1853 00042
 1854 00035
 1855 00028
 1856 00031
 1857 00083
 1858 00059
 1859 00087
 1860 00069
 1861 00083
 1862 00022
 1863 00058
 1864 00045
 1865 00022
 1866 00070
 1867 00086
 1868 00098
 1869 00044
 1870 00013
 1871 00037
 1872 00024
 1873 00067
 1874 00080
 1875 00007
 1876 00067
 1877 00016
 1878 00010
 1879 00088
 1880 00054
 1881 00060
 1882 00076
 1883 00097
 1884 00037
 1885 00063
 1886 00031
 1887 00061
 1888 00091
 1889 00010
 1890 00061
 1891 00097
 1892 00076
 1893 00059
 1894 00040
 1895 00028
 1896 00015
 1897 00045
 1898 00050
 1899 00086
 1900 00061
 1901 00030
 1902 00011
 1903 00085
 1904 00087
 1905 00053
 1906 00010
 1907 00088
 1908 00040
 1909 00069
 1910 00082
 1911 00060
 1912 00057
 1913 00038
 1914 00074
 1915 00035
 1916 00044
 1917 00033
 1918 00098
 1919 00080
 1920 00047
 1921 00003
 1922 00051
 1923 00056
 1924 00012
 1925 00028
 1926 00086
 1927 00026
 1928 00091
 1929 00045
 1930 00010
 1931 00092
 1932 00018
 1933 00063
 1934 00004
 1935 00066
 1936 00047
 1937 00073
 1938 00018
 1939 00057
 1940 00051
 1941 00032
 1942 00079
 1943 00025
 1944 00041
 1945 00061
 1946 00068
 1947 00078
 1948 00034
 1949 00071
 1950 00003
 1951 00033
 1952 00029
 1953 00040
 1954 00025
 1955 00015
 1956 00072
 1957 00088
 1958 00051
 1959 00020
 1960 00076
 1961 00070
 1962 00010
 1963 00020
 1964 00038
 1965 00013
 1966 00027
 1967 00092
 1968 00097
 1969 00060
 1970 00022
 1971 00054
 1972 00073
 1973 00020
 1974 00051
 1975 00027
 1976 00087
 1977 00051
 1978 00041
 1979 00073
 1980 00061
 1981 00001
 1982 00031
 1983 00094
 1984 00011
 1985 00074
 1986 00056
 1987 00034
 1988 00009
 1989 00074
 1990 00031
 1991 00020
 1992 00091
 1993 00063
 1994 00075
 1995 00001
 1996 00054
 1997 00062
 1998 00031
 1999 00030
 2000 00060
 2001 00074
 2002 00067
 2003 00013
 2004 00083
 2005 00065
 2006 00010
 2007 00063
 2008 00038
 2009 00065
 2010 00075
 2011 00094
 2012 00085
 2013 00098
 2014 00053
 2015 00059
 2016 00063
 2017 00042
 2018 00021
 2019 00093
 2020 00013
 2021 00055
 2022 00036
 2023 00076
 2024 00053
 2025 00014
 2026 00030
 2027 00071
 2028 00002
 2029 00084
 2030 00016
 2031 00082
 2032 00087
 2033 00057
 2034 00074
 2035 00057
 2036 00029
 2037 00048
 2038 00014
 2039 00073
 2040 00004
 2041 00022
 2042 00091
 2043 00081
 2044 00094
 2045 00041
 2046 00067
 2047 00027
 2048 00082
 2049 00020
 2050 00004
 2051 00089
 2052 00043
 2053 00092
 2054 00036
 2055 00070
 2056 00029
 2057 00045
 2058 00082
 2059 00065
 2060 00049
 2061 00002
 2062 00063
 2063 00078
 2064 00018
 2065 00013
 2066 00075
 2067 00076
 2068 00050
 2069 00085
 2070 00064
 2071 00037
 2072 00004
 2073 00057
 2074 00041
 2075 00018
 2076 00015
 2077 00065
 2078 00070
 2079 00044
 2080 00085
 2081 00072
 2082 00011
 2083 00036
 2084 00035
 2085 00084
 2086 00004
 2087 00070
 2088 00049
 2089 00047
 2090 00020
 2091 00010
 2092 00080
 2093 00079
 2094 00059
 2095 00089
 2096 00001
 2097 00087
 2098 00005
 2099 00022
 2100 00087
 2101 00031
 2102 00023
 2103 00038
 2104 00035
 2105 00049
 2106 00071
 2107 00033
 2108 00046
 2109 00081
 2110 00064
 2111 00043
 2112 00059
 2113 00046
 2114 00051
 2115 00062
 2116 00033
 2117 00089
 2118 00061
 2119 00066
 2120 00064
 2121 00092
 2122 00023
 2123 00030
 2124 00056
 2125 00017
 2126 00071
 2127 00085
 2128 00018
 2129 00002
 2130 00072
 2131 00002
 2132 00042
 2133 00031
 2134 00013
 2135 00053
 2136 00035
 2137 00017
 2138 00091
 2139 00073
 2140 00073
 2141 00048
 2142 00095
 2143 00020
 2144 00026
 2145 00023
 2146 00010
 2147 00065
 2148 00004
 2149 00040
 2150 00006
 2151 00079
 2152 00049
 2153 00084
 2154 00007
 2155 00015
 2156 00049
 2157 00090
 2158 00045
 2159 00024
 2160 00042
 2161 00076
 2162 00021
 2163 00097
 2164 00003
 2165 00063
 2166 00042
 2167 00030
 2168 00092
 2169 00055
 2170 00038
 2171 00044
 2172 00053
 2173 00067
 2174 00044
 2175 00042
 2176 00036
 2177 00028
 2178 00009
 2179 00017
 2180 00066
 2181 00092
 2182 00044
 2183 00051
 2184 00055
 2185 00057
 2186 00059
 2187 00006
 2188 00050
 2189 00052
 2190 00097
 2191 00021
 2192 00045
 2193 00019
 2194 00017
 2195 00021
 2196 00076
 2197 00086
 2198 00032
 2199 00023
 2200 00056
 2201 00078
 2202 00093
 2203 00097
 2204 00013
 2205 00093
 2206 00087
 2207 00032
 2208 00083
 2209 00089
 2210 00023
 2211 00021
 2212 00063
 2213 00040
 2214 00087
 2215 00083
 2216 00095
 2217 00095
 2218 00074
 2219 00057
 2220 00060
 2221 00082
 2222 00048
 2223 00045
 2224 00018
 2225 00093
 2226 00063
 2227 00074
 2228 00031
 2229 00030
 2230 00043
 2231 00050
 2232 00028
 2233 00069
 2234 00060
 2235 00043
 2236 00081
 2237 00086
 2238 00067
 2239 00064
 2240 00017
 2241 00067
 2242 00027
 2243 00079
 2244 00049
 2245 00092
 2246 00021
 2247 00071
 2248 00059
 2249 00032
 2250 00083
 2251 00029
 2252 00072
 2253 00003
 2254 00062
 2255 00047
 2256 00095
 2257 00076
 2258 00063
 2259 00032
 2260 00053
 2261 00032
 2262 00028
 2263 00075
 2264 00050
 2265 00022
 2266 00037
 2267 00043
 2268 00020
 2269 00010
 2270 00013
 2271 00080
 2272 00080
 2273 00019
 2274 00043
 2275 00055
 2276 00023
 2277 00014
 2278 00070
 2279 00032
 2280 00080
 2281 00004
 2282 00044
 2283 00004
 2284 00040
 2285 00035
 2286 00044
 2287 00055
 2288 00041
 2289 00068
 2290 00080
 2291 00068
 2292 00025
 2293 00027
 2294 00097
 2295 00039
 2296 00030
 2297 00024
 2298 00042
 2299 00052
 2300 00088
 2301 00087
 2302 00036
 2303 00023
 2304 00083
 2305 00058
 2306 00050
 2307 00085
 2308 00060
 2309 00097
 2310 00072
 2311 00097
 2312 00051
 2313 00037
 2314 00083
 2315 00040
 2316 00059
 2317 00052
 2318 00025
 2319 00083
 2320 00008
 2321 00076
 2322 00014
 2323 00020
 2324 00094
 2325 00043
 2326 00045
 2327 00075
 2328 00047
 2329 00012
 2330 00067
 2331 00046
 2332 00056
 2333 00030
 2334 00074
 2335 00001
 2336 00028
 2337 00041
 2338 00042
 2339 00074
 2340 00021
 2341 00036
 2342 00022
 2343 00080
 2344 00069
 2345 00023
 2346 00012
 2347 00062
 2348 00025
 2349 00039
 2350 00077
 2351 00008
 2352 00046
 2353 00056
 2354 00064
 2355 00043
 2356 00034
 2357 00008
 2358 00054
 2359 00085
 2360 00043
 2361 00020
 2362 00084
 2363 00024
 2364 00013
 2365 00064
 2366 00092
 2367 00068
 2368 00007
 2369 00061
 2370 00049
 2371 00046
 2372 00016
 2373 00087
 2374 00054
 2375 00024
 2376 00094
 2377 00070
 2378 00063
 2379 00063
 2380 00033
 2381 00043
 2382 00030
 2383 00029
 2384 00034
 2385 00022
 2386 00023
 2387 00098
 2388 00020
 2389 00090
 2390 00014
 2391 00077
 2392 00027
 2393 00089
 2394 00039
 2395 00013
 2396 00003
 2397 00077
 2398 00047
 2399 462045

-------------------------------

vars:
379     R       0   main
380     R       1   main
381     RW      0   if only
382     RW      0   main        x
383     RW      0   main        y
384     RW      0   main        tmp
385     RW      0   main
386     RW      0   main, f3    score
387     RW    318   f3          nbOfBlocks
388     RW     20   main        ballX
389     RW     15   main        ballY
390     RW      1   main        velX
391     RW      1   main        velY
392     RW     22   main        xBar
2399    R     462045

functions:
69      start
393     f3      blockWasHit
456     f5      getPointsOffset
549     f2      updateCell
578     f1      getCell
601     f4      getPointsPtr

-------------------------------
   0 00001 ADD         *380         *379         *385
   4 01008 EQL        *2399       462045         *381
   8 01005 JPT         *381           12
  11 00099 HLT
  12 00109 REL         2400
  14 01102 MUL            0            1         *383
  18 01101 ADD            0            0         *382
  22 20101 ADD            0         *382           %1
  26 21001 ADD         *383            0           %2
  30 21102 MUL           37            1           %0
  34 01105 JPT            1          578
  37 00004 OUT         *382
  39 00004 OUT         *383
  41 00204 OUT           %1
  43 01001 ADD         *382            1         *382
  47 01007 LES         *382           44         *381
  51 01005 JPT         *381           22
  54 01001 ADD         *383            1         *383
  58 01007 LES         *383           20         *381
  62 01005 JPT         *381           18
  65 01006 JPF         *385           69
  68 00099 HLT
  69 00104 OUT           -1
  71 00104 OUT            0
  73 00004 OUT         *386
  75 00003 INP         *384
  77 01007 LES         *384            0         *381
  81 01005 JPT         *381           94
  84 00107 LES            0         *384         *381
  88 01005 JPT         *381          108
  91 01105 JPT            1          161
  94 00107 LES            1         *392         *381
  98 01006 JPF         *381          161
 101 01102 MUL           -1            1         *384
 105 01106 JPF            0          119
 108 01007 LES         *392           42         *381
 112 01006 JPF         *381          161
 115 01101 ADD            0            1         *384
 119 21002 MUL         *392            1           %1
 123 21101 ADD            0           18           %2
 127 21102 MUL            1            0           %3
 131 21101 ADD          138            0           %0
 135 01105 JPT            1          549
 138 00001 ADD         *392         *384         *392
 142 21002 MUL         *392            1           %1
 146 21102 MUL            1           18           %2
 150 21102 MUL            3            1           %3
 154 21101 ADD            0          161           %0
 158 01106 JPF            0          549
 161 01101 ADD            0            0         *384
 165 20001 ADD         *388         *390           %1
 169 20101 ADD            0         *389           %2
 173 21102 MUL            1          180           %0
 177 01106 JPF            0          578
 180 01206 JPF           %1          213
 183 01208 EQL           %1            2         *381
 187 01006 JPF         *381          205
 190 20001 ADD         *388         *390           %1
 194 21002 MUL         *389            1           %2
 198 21102 MUL            1          205           %0
 202 01105 JPT            1          393
 205 01002 MUL         *390           -1         *390
 209 01102 MUL            1            1         *384
 213 20101 ADD            0         *388           %1
 217 20001 ADD         *389         *391           %2
 221 21102 MUL          228            1           %0
 225 01105 JPT            1          578
 228 01206 JPF           %1          261
 231 01208 EQL           %1            2         *381
 235 01006 JPF         *381          253
 238 21002 MUL         *388            1           %1
 242 20001 ADD         *389         *391           %2
 246 21102 MUL          253            1           %0
 250 01105 JPT            1          393
 253 01002 MUL         *391           -1         *391
 257 01101 ADD            1            0         *384
 261 01005 JPT         *384          161
 264 20001 ADD         *388         *390           %1
 268 20001 ADD         *389         *391           %2
 272 21101 ADD          279            0           %0
 276 01106 JPF            0          578
 279 01206 JPF           %1          316
 282 01208 EQL           %1            2         *381
 286 01006 JPF         *381          304
 289 20001 ADD         *388         *390           %1
 293 20001 ADD         *389         *391           %2
 297 21102 MUL          304            1           %0
 301 01106 JPF            0          393
 304 01002 MUL         *390           -1         *390
 308 01002 MUL         *391           -1         *391
 312 01102 MUL            1            1         *384
 316 01005 JPT         *384          161
 319 21002 MUL         *388            1           %1
 323 21002 MUL         *389            1           %2
 327 21101 ADD            0            0           %3
 331 21101 ADD            0          338           %0
 335 01105 JPT            1          549
 338 00001 ADD         *388         *390         *388
 342 00001 ADD         *389         *391         *389
 346 20101 ADD            0         *388           %1
 350 20101 ADD            0         *389           %2
 354 21102 MUL            1            4           %3
 358 21102 MUL            1          365           %0
 362 01106 JPF            0          549
 365 01007 LES         *389           19         *381
 369 01005 JPT         *381           75
 372 00104 OUT           -1
 374 00104 OUT            0
 376 00104 OUT            0
 378 00099 HLT
...
 393 00109 REL            3
 395 22101 ADD            0          %-2           %1
 399 21202 MUL          %-1            1           %2
 403 21102 MUL            1            0           %3
 407 21102 MUL            1          414           %0
 411 01106 JPF            0          549
 414 21201 ADD          %-2            0           %1
 418 22102 MUL            1          %-1           %2
 422 21101 ADD          429            0           %0
 426 01106 JPF            0          601
 429 02101 ADD            0           %1         *435
 433 00001 ADD         *386           *0         *386
 437 00104 OUT           -1
 439 00104 OUT            0
 441 00004 OUT         *386
 443 01001 ADD         *387           -1         *387
 447 01005 JPT         *387          451
 450 00099 HLT
 451 00109 REL           -3
 453 02105 JPT            1           %0
 456 00109 REL            8
 458 22202 MUL          %-7          %-6          %-3
 462 22201 ADD          %-3          %-5          %-3
 466 21202 MUL          %-4           64          %-2
 470 02207 LES          %-3          %-2         *381
 474 01005 JPT         *381          492
 477 21202 MUL          %-2           -1          %-1
 481 22201 ADD          %-3          %-1          %-3
 485 02207 LES          %-3          %-2         *381
 489 01006 JPF         *381          481
 492 21202 MUL          %-4            8          %-2
 496 02207 LES          %-3          %-2         *381
 500 01005 JPT         *381          518
 503 21202 MUL          %-2           -1          %-1
 507 22201 ADD          %-3          %-1          %-3
 511 02207 LES          %-3          %-2         *381
 515 01006 JPF         *381          507
 518 02207 LES          %-3          %-4         *381
 522 01005 JPT         *381          540
 525 21202 MUL          %-4           -1          %-1
 529 22201 ADD          %-3          %-1          %-3
 533 02207 LES          %-3          %-4         *381
 537 01006 JPF         *381          529
 540 22101 ADD            0          %-3          %-7
 544 00109 REL           -8
 546 02106 JPF            0           %0
 549 00109 REL            4
 551 01202 MUL          %-2           44         *566
 555 00201 ADD          %-3         *566         *566
 559 00101 ADD          639         *566         *566
 563 01201 ADD          %-1            0           *0
 567 00204 OUT          %-3
 569 00204 OUT          %-2
 571 00204 OUT          %-1
 573 00109 REL           -4
 575 02106 JPF            0           %0
 578 00109 REL            3
 580 01202 MUL          %-1           44         *593
 584 00201 ADD          %-2         *593         *593
 588 00101 ADD          639         *593         *593
 592 21002 MUL           *0            1          %-2
 596 00109 REL           -3
 598 02105 JPT            1           %0
 601 00109 REL            3
 603 22102 MUL           20          %-2           %1
 607 22201 ADD           %1          %-1           %1
 611 21102 MUL          443            1           %2
 615 21101 ADD          114            0           %3
 619 21102 MUL            1          880           %4
 623 21102 MUL            1          630           %0
 627 01106 JPF            0          456
 630 21201 ADD           %1         1519          %-2
 634 00109 REL           -3
 636 02105 JPT            1           %0
...

-------------------------------
if progA -> *385 = 1
if progB -> *385 = 0

main() {
    //12
    //Setup stack at 2400
    *383 = 0
18:
    *382 = 0
22:
    res = f1(*382, *383)
    output *382 *383 res
    //43
    *382++
    *381 = *382 < 44
    if *381 -> goto 22
    //54
    *383++
    *381 = *383 < 20
    if *381 -> goto 18
    if !*385 -> goto start
    halt

start: //69
    output -1 0 *386
75:
    *384 = input
    //77
    *381 = *384 < 0
    if *381 -> goto 94
    *381 = 0 < *384
    if *381 -> goto 108
    goto 161
94:
    *381 = 1 < *392
    if !*381 -> goto 161
    *384 = -1
    goto 119
108:
    *381 = *392 < 42
    if !*381 -> goto 161
    *384 = 1
119:
    f2(*392, 18, 0)
    *392 += *384
    f2(*392, 18, 3)
161:
    *384 = 0
    res = f1(*388 + *390, *389)
    //180
    if !res -> goto 213
    *381 = res == 2
    if !*381 -> goto 205
    f3(*388 + *390, *389)
205:
    *390 = -*390
    *384 = 1
213:
    res = f1(*388, *389 + *391)
    if !res -> goto 261
    *381 = res == 2
    if !*381 -> goto 253
    f3(*388, *389 + *391)
253:
    *391 = -*391
    *384 = 1
261:
    if *384 -> goto 161
    res = f1(*388 + *390, *389 + *391)
    if !res -> goto 316
    *381 = res == 2
    if !*381 -> goto 304
    f3(*388 + *390, *389 + *391)
304:
    *390 = -*390
    *391 = -*391
    *384 = 1
316:
    if *384 -> goto 161
    f2(*388, *389, 0)
    *388 += *390
    *389 += *391
    f2(*388, *389, 4)
    *381 = *389 < 19
    if *381 -> goto 75
    output -1 0 0
    halt

...
f3(var2, var1): //393 stacksize 3
    f2(var2, var1, 0)
    res = f4(var2, var1)
    *435 = res
    *386 = *386 + *435
    output -1 0 *386
    *387--
    if *387 -> goto 451
    halt
451:
    return

f5(var7, var6, var5, var4): //456
    var3
    var2
    var1
    var3 = var7 * var6
    var3 += var5
    var2 = var4 * 64
    *381 = var3 < var2
    if *381 -> goto 492
    var1 = -var2
481:
    var3 += var1
    *381 = var3 < var2
    if !*381 -> goto 481
492:
    var2 = var4 * 8
    *381 = var3 < var2
    if *381 -> goto 518
    var1 = -var2
507:
    var3 += var1
    *381 = var3 < var2
    if !*381 -> goto 507
518:
    *381 = var3 < var4
    if *381 -> goto 540
    var1 = -var4
529:
    var3 += var1
    *381 = var3 < var4
    if !*381 ->goto 529
540:
    return var3

f2(var3, var2, var1): //549, stacksize 4
    *566 = var2 * 44
    *566 += var3
    *566 += 639
    **566 = var1
    output var3 var2 var1
    return

f1(var2, var1): //578, stacksize 3
    *593 = var1 * 44
    *593 += var2
    *593 += 639
    return **593

f4(var2, var1): //601, stacksize 3
 res = f5(20*var2 + var1, 443, 114, 880)
 return res + 1519

...




-------------------------------

main() {
    *383 = 0
18:
    *382 = 0
22:
    res = f1(*382, *383)
    output *382 *383 res
    *382++
    if *382 < 44 -> goto 22
    *383++
    if *383 < 20 -> goto 18
    if !progA -> goto start
    halt

start:
    output -1 0 *386
75:
    *384 = input
    if *384 < 0 -> goto 94
    if 0 < *384 -> goto 108
    goto 161
94:
    if !(1 < *392) -> goto 161
    *384 = -1
    goto 119
108:
    if !(*392 < 42) -> goto 161
    *384 = 1
119:
    f2(*392, 18, 0)
    *392 += *384
    f2(*392, 18, 3)
161:
    *384 = 0
    res = f1(*388 + *390, *389)
    //180
    if !res -> goto 213
    if !(res == 2) -> goto 205
    f3(*388 + *390, *389)
205:
    *390 = -*390
    *384 = 1
213:
    res = f1(*388, *389 + *391)
    if !res -> goto 261
    if !(res == 2) -> goto 253
    f3(*388, *389 + *391)
253:
    *391 = -*391
    *384 = 1
261:
    if *384 -> goto 161
    res = f1(*388 + *390, *389 + *391)
    if !res -> goto 316
    if !(res == 2) -> goto 304
    f3(*388 + *390, *389 + *391)
304:
    *390 = -*390
    *391 = -*391
    *384 = 1
316:
    if *384 -> goto 161
    f2(*388, *389, 0)
    *388 += *390
    *389 += *391
    f2(*388, *389, 4)
    if *389 < 19 -> goto 75
    output -1 0 0
    halt

...
f3(var2, var1):
    f2(var2, var1, 0)
    res = f4(var2, var1)
    *435 = res
    *386 = *386 + **435
    output -1 0 *386
    *387--
    if *387 -> goto 451
    halt
451:
    return

f5(var7, var6, var5, var4):
    var3
    var2
    var1
    var3 = var7 * var6
    var3 += var5
    var2 = var4 * 64
    if var3 < var2 -> goto 492
    var1 = -var2
481:
    var3 += var1
    if !(var3 < var2) -> goto 481
492:
    var2 = var4 * 8
    if var3 < var2 -> goto 518
    var1 = -var2
507:
    var3 += var1
    if !(var3 < var2) -> goto 507
518:
    if var3 < var4 -> goto 540
    var1 = -var4
529:
    var3 += var1
    if !(var3 < var4) ->goto 529
540:
    return var3

f2(var3, var2, var1):
    *566 = var2 * 44
    *566 += var3
    *566 += 639
    **566 = var1
    output var3 var2 var1
    return

f1(var2, var1):
    *593 = var1 * 44
    *593 += var2
    *593 += 639
    return **593

f4(var2, var1):
 res = f5(20*var2 + var1, 443, 114, 880)
 return res + 1519

...

-------------------------------

main():
    y = 0
    do {
        x = 0
        do {
            res = getCell(x, y)
            output x y res
            x++
        } while(x < 44)
        y++
    } while(y < 20)

    if progA {
        halt
    }

    output -1 0 score
75:
    *384 = input
    if !(*384 < 0) {
        if 0 < *384 {
            if !(*392 < 42) -> goto 161
            *384 = 1
            goto 119
        } else {
            goto 161
        }
    } else {
        if !(1 < *392) -> goto 161
        *384 = -1
        goto 119
    }

119:
    updateCell(*392, 18, 0)
    *392 += *384
    updateCell(*392, 18, 3)
    goto 161
161:
    *384 = 0
    res = getCell(*388 + *390, *389)
    if res {
        if (res == 2) {
            f3(*388 + *390, *389)
        }
        *390 = -*390
        *384 = 1
    }

    res = getCell(*388, *389 + *391)
    if res {
        if (res == 2) {
            f3(*388, *389 + *391)
        }
        *391 = -*391
        *384 = 1
    }

    if *384 -> goto 161

    res = getCell(*388 + *390, *389 + *391)
    if res {
        if (res == 2) {
            f3(*388 + *390, *389 + *391)
        }
        *390 = -*390
        *391 = -*391
        *384 = 1
    }

    if *384 -> goto 161

    updateCell(*388, *389, 0)
    *388 += *390
    *389 += *391
    updateCell(*388, *389, 4)

    if !(*389 < 19) {
        output -1 0 0
        halt
    }
    goto 75
...
blockWasHit(x, y):
    updateCell(x, y, 0)

    res = getPointsPtr(x, y)
    score += *res
    output -1 0 score

    nbOfBlocks--
    if nbOfBlocks == 0 {
        halt
    }

    return

getPointsOffset(var7, var6, var5, var4):
    var3 = var7 * var6
    var3 += var5

    var2 = var4 * 64
    if !(var3 < var2) {
        var1 = -var2
        do {
            var3 += var1
        } while(!(var3 < var2))
    }

    var2 = var4 * 8
    if !(var3 < var2) {
        var1 = -var2
        do {
            var3 += var1
        } while(!(var3 < var2))
    }

    if !(var3 < var4) {
        var1 = -var4
        do {
            var3 += var1
        } while( !(var3 < var4))
    }

    return var3

updateCell(x, y, val):
    639[44 * y + x] = val
    output x y val
    return

getCell(x, y):
    return 639[44 * y + x]

getPointsPtr(x, y):
 res = getPointsOffset(20*x + y, 443, 114, 880)
 return res + 1519

...

-------------------------------

main():
    y = 0
    do {
        x = 0
        do {
            res = getCell(x, y)
            output x y res
            x++
        } while(x < 44)
        y++
    } while(y < 20)

    if progA {
        halt
    }

    output -1 0 score

    while(true) {
        tmp = input
        if tmp >= 0 {
            if tmp > 0 {
                if !(xBar < 42) -> goto 161
                tmp = 1
                goto 119
            } else {    //tmp == 0
                goto 161
            }
        } else {
            if !(1 < xBar) -> goto 161
            tmp = -1
            goto 119
        }

    119:
        updateCell(xBar, 18, 0)
        xBar += tmp
        updateCell(xBar, 18, 3)
        goto 161
    161:
        tmp = 0
        res = getCell(ballX + velX, ballY)
        if res {
            if (res == 2) {
                blockWasHit(ballX + velX, ballY)
            }
            velX = -velX
            tmp = 1
        }

        res = getCell(ballX, ballY + velY)
        if res {
            if (res == 2) {
                blockWasHit(ballX, ballY + velY)
            }
            velY = -velY
            tmp = 1
        }

        if tmp -> goto 161

        res = getCell(ballX + velX, ballY + velY)
        if res {
            if (res == 2) {
                f3(ballX + velX, ballY + velY)
            }
            velX = -velX
            velY = -velY
            tmp = 1
        }

        if tmp -> goto 161

        updateCell(ballX, ballY, 0)
        ballX += velX
        ballY += velY
        updateCell(ballX, ballY, 4)

        if !(ballY < 19) {
            output -1 0 0
            halt
        }
    }

blockWasHit(x, y):
    updateCell(x, y, 0)

    res = getPointsPtr(x, y)
    score += *res
    output -1 0 score

    nbOfBlocks--
    if nbOfBlocks == 0 {
        halt
    }

    return

getPointsOffset(var7, var6, var5, var4):
    var3 = var7 * var6
    var3 += var5

    var2 = var4 * 64
    if !(var3 < var2) {
        var1 = -var2
        do {
            var3 += var1
        } while(!(var3 < var2))
    }

    var2 = var4 * 8
    if !(var3 < var2) {
        var1 = -var2
        do {
            var3 += var1
        } while(!(var3 < var2))
    }

    if !(var3 < var4) {
        var1 = -var4
        do {
            var3 += var1
        } while( !(var3 < var4))
    }

    return var3

updateCell(x, y, val):
    639[44 * y + x] = val
    output x y val
    return

getCell(x, y):
    return 639[44 * y + x]

getPointsPtr(x, y):
 res = getPointsOffset(20*x + y, 443, 114, 880)
 return res + 1519

-------------------------------

main():
    y = 0
    do {
        x = 0
        do {
            res = getCell(x, y)
            output x y res
            x++
        } while(x < 44)
        y++
    } while(y < 20)

    if progA {
        halt
    }

    output -1 0 score

    while(true) {
        tmp = input
        if tmp != 0 {
            if tmp > 0 {
                if xBar >= 42 {
                    goto checkCollisions
                }
                tmp = 1
            } else {
                if xBar <= 1 {
                    goto checkCollisions
                }
                tmp = -1
            }
            updateCell(xBar, 18, 0)
            xBar += tmp
            updateCell(xBar, 18, 3)
        }

        updateCell(xBar, 18, 0)
        xBar += tmp
        updateCell(xBar, 18, 3)

    checkCollisions:
        tmp = 0
        res = getCell(ballX + velX, ballY)
        if res {
            if (res == 2) {
                blockWasHit(ballX + velX, ballY)
            }
            velX = -velX
            tmp = 1
        }

        res = getCell(ballX, ballY + velY)
        if res {
            if (res == 2) {
                blockWasHit(ballX, ballY + velY)
            }
            velY = -velY
            tmp = 1
        }

        if tmp {
            goto checkCollisions
        }

        res = getCell(ballX + velX, ballY + velY)
        if res {
            if (res == 2) {
                blockWasHit(ballX + velX, ballY + velY)
            }
            velX = -velX
            velY = -velY
            tmp = 1
        }

        if tmp {
            goto checkCollisions
        }

        updateCell(ballX, ballY, 0)
        ballX += velX
        ballY += velY
        updateCell(ballX, ballY, 4)

        if ballY >= 19 {
            output -1 0 0
            halt
        }
    }

blockWasHit(x, y):
    updateCell(x, y, 0)

    res = getPointsPtr(x, y)
    score += *res
    output -1 0 score

    nbOfBlocks--
    if nbOfBlocks == 0 {
        halt
    }

    return

getPointsOffset(var7, var6 = 443, var5 = 114, var4 = 880):
    acc = var7 * var6 + var5

    var2 = var4 * 64
    if acc >= var2 {
        do {
            acc -= var2
        } while(acc >= var2)
    }

    var2 = var4 * 8
    if acc >= var2 {
        do {
            acc -= var2
        } while(acc >= var2)
    }

    if acc >= var4 {
        do {
            acc -= var4
        } while(acc >= var4)
    }

    return acc

updateCell(x, y, val):
    639[44 * y + x] = val
    output x y val
    return

getCell(x, y):
    return 639[44 * y + x]

getPointsPtr(x, y):
 res = getPointsOffset(20*x + y, 443, 114, 880)
 return res + 1519


-------------------------------

main():
    y = 0
    do {
        x = 0
        do {
            res = getCell(x, y)
            output x y res
            x++
        } while(x < 44)
        y++
    } while(y < 20)

    if progA {
        halt
    }

    output -1 0 score

    while(true) {
        tmp = input
        if tmp != 0 {
            if tmp > 0 {
                if xBar >= 42 {
                    goto checkCollisions
                }
                tmp = 1
            } else {
                if xBar <= 1 {
                    goto checkCollisions
                }
                tmp = -1
            }
            updateCell(xBar, 18, 0)
            xBar += tmp
            updateCell(xBar, 18, 3)
        }

        updateCell(xBar, 18, 0)
        xBar += tmp
        updateCell(xBar, 18, 3)

    checkCollisions:
        tmp = 0
        res = getCell(ballX + velX, ballY)
        if res {
            if (res == 2) {
                blockWasHit(ballX + velX, ballY)
            }
            velX = -velX
            tmp = 1
        }

        res = getCell(ballX, ballY + velY)
        if res {
            if (res == 2) {
                blockWasHit(ballX, ballY + velY)
            }
            velY = -velY
            tmp = 1
        }

        if tmp {
            goto checkCollisions
        }

        res = getCell(ballX + velX, ballY + velY)
        if res {
            if (res == 2) {
                blockWasHit(ballX + velX, ballY + velY)
            }
            velX = -velX
            velY = -velY
            tmp = 1
        }

        if tmp {
            goto checkCollisions
        }

        updateCell(ballX, ballY, 0)
        ballX += velX
        ballY += velY
        updateCell(ballX, ballY, 4)

        if ballY >= 19 {
            output -1 0 0
            halt
        }
    }

blockWasHit(x, y):
    updateCell(x, y, 0)

    res = getPointsPtr(x, y)
    score += *res
    output -1 0 score

    nbOfBlocks--
    if nbOfBlocks == 0 {
        halt
    }

    return

getPointsOffset(val, mul = 443, add = 114, mod = 880):
    return (val * mul + add) % mod

updateCell(x, y, val):
    639[44 * y + x] = val
    output x y val
    return

getCell(x, y):
    return 639[44 * y + x]

getPointsPtr(x, y):
 res = getPointsOffset(20*x + y, 443, 114, 880)
 return res + 1519
